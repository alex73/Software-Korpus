package org.alex73.korpus.server.data;

import java.io.Serializable;

@SuppressWarnings("serial")
public class WordRequest implements Serializable {
    /**
     * Правяраць выпадкі: ў, ў напачатку, й, й напачатку, ґ, апострафы, злучкі,
     * націск, вялікія/малыя.
     * 
     * Нідзе не ўлічваем націскі. Знятую аманімію граматыкі таксама пакуль не
     * ўлічваем.
     */
    public enum WordMode {
        /**
         * Звычайны пошук: "слова"(з '*' і '?'), "з варыянтамі напісання", "граматыка".
         * 
         * Нармалізацыя ўведзенага: lightNormalization (апострафы, злучкі, націск, ў
         * напачатку -> у, й напачатку -> і, вялікія літары -> малыя, ґ -> г).
         * 
         * Мусяць працаваць '?'(1), '*'(0:).
         * 
         * Параўноўваем уведзенае слова з словам у корпусе пасля lightNormalization: не
         * зважаем на розніцу малых/вялікіх літар, ў/й напачатку, ґ/г.
         * 
         * Калі пазначана "з варыянтамі напісання", дадаткова не зважаем на мяккія знакі
         * і мяккія/цвёрдыя галосныя: параўноўваем superNormalization уведзенага слова і
         * superNormalization слова ў корпусе.
         * 
         * Калі пазначана граматыка, вызначаем граматыку па базе і параўноўваем.
         */
        USUAL,
        /**
         * Усе словаформы: "слова"(адна з формаў), "з варыянтамі напісання",
         * "граматыка".
         * 
         * Нармалізацыя ўведзенага: lightNormalization (апострафы, злучкі, націск, ў
         * напачатку -> у, й напачатку -> і, вялікія літары -> малыя, ґ -> г).
         * 
         * Параўноўваем уведзенае слова з формамі ў базе пасля lightNormalization (не
         * зважаем на розніцу малых/вялікіх літар, ў/й напачатку, ґ/г). Калі знайшлі
         * форму, усе формы гэтай лемы захоўваем у спіс форм.
         * 
         * Калі пазначана граматыка, абмяжоўваем формы ў спісе толькі формамі з такой
         * самай граматыкай.
         *
         * Кожную форму са спісу форм параўноўваем з словам у корпусе пасля
         * lightNormalization: не зважаем на розніцу малых/вялікіх літар, ў/й напачатку,
         * ґ/г.
         * 
         * Калі пазначана "з варыянтамі напісання", у абодвух пошуках дадаткова не
         * зважаем на мяккія знакі і мяккія/цвёрдыя галосныя - superNormalization.
         */
        ALL_FORMS,
        /**
         * Дакладны пошук: "слова"(з '*' і '?').
         * 
         * Мусяць працаваць '?'(1), '*'(0:).
         * 
         * Нармалізацыя ўведзенага: znakNormalization - апострафы, злучкі, націскі
         * адкідаем.
         * 
         * Параўнанне ўведзенага слова з корпусам - znakNormalization: зважаем на
         * розніцу малых/вялікіх літар, у/ў, і/й, г/ґ, ў/й напачатку слова не
         * перарабляем.
         */
        EXACT,
        /**
         * Толькі граматыка: "з варыянтамі напісання", "граматыка".
         */
        GRAMMAR
    };

    public WordMode mode;
    public boolean variants;
    public String word;
    public String grammar;
    public transient String[] forms; // спіс формаў з граматычнай базы калі шукаем ALL_FORMS

    @Override
    public String toString() {
        return "mode=" + mode + " variants=" + variants + " word=" + word + " grammar=" + grammar;
    }
}
